name: atlas
version: 1.0.0
summary: Atlas
description: Atlas
confinement: strict
compression: lzo
grade: stable
base: core22

apps:
  frontend:
    daemon: simple
    restart-condition: always
    restart-delay: 1s
    command-chain:
      - bin/wayland-launch
    command: usr/bin/wrapper
    plugs:
      - opengl
      - wayland
      # - browser-support
      # - hardware-observe
      - network
      # - network-bind
      # - process-control
      # - joystick
      # - network-manager
      # - alsa
      # - shutdown

  overlay:
    command: bin/atlas-overlay
    extensions:
      - gnome
    plugs:
      - wayland
      - process-control

plugs:
  graphics-core20:
    interface: content
    target: $SNAP/graphics
    default-provider: mesa-core20
  gnome-42-2204:
    interface: content
    target: $SNAP/gnome-platform
    default-provider: gnome-42-2204

environment:
  # graphics
  LD_LIBRARY_PATH: $SNAP/gnome-platform/usr/lib/$SNAPCRAFT_ARCH_TRIPLET:$SNAP/graphics/lib:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/samba:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/blas:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/lapack
  LIBGL_DRIVERS_PATH: $SNAP/graphics/dri
  LIBVA_DRIVERS_PATH: $SNAP/graphics/dri
  __EGL_VENDOR_LIBRARY_DIRS: $SNAP/graphics/glvnd/egl_vendor.d
  # XDG
  XDG_CACHE_HOME:  $SNAP_USER_COMMON/.cache
  XDG_CONFIG_HOME: $SNAP_USER_DATA/.config
  XDG_CONFIG_DIRS: $SNAP/etc/xdg
  XDG_DATA_HOME: $SNAP_USER_DATA
  XDG_DATA_DIRS: $SNAP/usr/share
  # GTK
  GDK_GL: gles
  GTK_USE_PORTAL: 0
  GTK_A11Y: none
  # other
  XKB_CONFIG_ROOT: $SNAP/usr/share/X11/xkb
  PKG_CONFIG_PATH: $SNAP/gnome-platform/usr/lib/pkgconfig
  PYTHONPATH: $PYTHONPATH:$SNAP/usr/lib/python3/dist-packages

parts:
  frontend:
    plugin: nil
    source: frontend
    build-snaps:
      - flutter/latest/stable
    build-environment:
      - C_INCLUDE_PATH: /snap/flutter/current/usr/include
      - LD_LIBRARY_PATH: $LD_LIBRARY_PATH:/snap/flutter/current/usr/lib/$SNAPCRAFT_ARCH_TRIPLET
      - PKG_CONFIG_PATH: $PKG_CONFIG_PATH:/snap/flutter/current/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pkgconfig
      - XDG_DATA_DIRS: /snap/flutter/current/usr/share:$XDG_DATA_DIRS
    override-build: |
      set -eux
      mkdir -p $SNAPCRAFT_PART_INSTALL/bin/lib
      flutter channel stable
      flutter upgrade
      flutter config --enable-linux-desktop
      flutter doctor
      flutter pub get
      flutter build linux --release -v
      cp -r build/linux/*/release/bundle/* $SNAPCRAFT_PART_INSTALL/bin
    stage-packages:
      - libgtk-3-0
      - libgl1
      - libasound2
      - network-manager
      - mpv
      - yt-dlp

  overlay:
    plugin: rust
    source: overlay
    build-packages:
      - cargo
      - rustc
      - pkg-config
      - libudev-dev
    stage-packages:
      - psmisc
    stage-snaps:
      - gnome-42-2204
    stage:
      - bin/atlas-overlay
      - usr/share/mime
      - usr/bin/killall

  fonts:
    plugin: nil
    stage-packages:
      - fonts-cantarell
      - fonts-noto
      - fonts-noto-extra
      - fonts-noto-cjk
    stage:
      - usr/share/fonts/opentype/cantarell
      - usr/share/fonts/truetype/noto/NotoSansMono-*.ttf
      - usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc

  dotenv:
    plugin: dump
    source: .
    organize:
      client.env: .env
    stage:
      - .env

  wrapper:
    plugin: dump
    source: wrapper
    organize:
      wrapper.sh: usr/bin/wrapper

  gsettings+pixbuf:
    plugin: nil
    build-packages:
      - libgdk-pixbuf2.0-0
      - librsvg2-common
      - shared-mime-info
    override-build: |
      # Update mime database
      update-mime-database ${SNAPCRAFT_PART_INSTALL}/usr/share/mime
    stage-packages:
      - librsvg2-common
      - gsettings-desktop-schemas
      - libglib2.0-bin
    override-prime: |
      snapcraftctl prime
      # Compile the gsettings schemas
      /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/glib-2.0/glib-compile-schemas "$SNAPCRAFT_PRIME/usr/share/glib-2.0/schemas"
      # Index the pixbuf loaders
      LOADERS_PATH=$(echo ${SNAPCRAFT_PRIME}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/gdk-pixbuf-2.0/*/loaders)
      QUERY_LOADERS=/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/gdk-pixbuf-2.0/gdk-pixbuf-query-loaders
      GDK_PIXBUF_MODULEDIR=${LOADERS_PATH} ${QUERY_LOADERS} > ${LOADERS_PATH}/../loaders.cache
      sed s!$SNAPCRAFT_PRIME!!g --in-place ${LOADERS_PATH}/../loaders.cache

  immodules:
    plugin: nil
    build-packages:
      - libgtk-3-0
    override-build: |
      snapcraftctl build
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/gtk-3.0/3.0.0/
      /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/libgtk-3-0/gtk-query-immodules-3.0 > ${SNAPCRAFT_PART_INSTALL}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/gtk-3.0/3.0.0/immodules.cache

  # Some utility scripts for setting up the Wayland environment
  wayland-launch:
    plugin: dump
    source: wayland-launch
    override-build: |
      # The plugs needed to run Wayland. (wayland-launch checks them, setup.sh connects them)
      # You may add further plugs here if you want these options
      PLUGS="opengl wayland graphics-core20"
      sed --in-place "s/%PLUGS%/$PLUGS/g" $SNAPCRAFT_PART_BUILD/bin/wayland-launch
      sed --in-place "s/%PLUGS%/$PLUGS/g" $SNAPCRAFT_PART_BUILD/bin/setup.sh
      snapcraftctl build
    stage-packages:
      - inotify-tools

  # This is one of four snippets that relate to providing the userspace graphics needed by your application.
  # This ensures that your snap doesn't contain its own copy of the userspace drivers
  cleanup:
    plugin: nil
    after:
      - frontend
      - overlay
      - wrapper
      - wayland-launch
      - gsettings+pixbuf
      - immodules
    build-snaps: [ mesa-core20 ]
    override-prime: |
      set -eux
      cd /snap/mesa-core20/current/egl/lib
      find . -type f,l -exec rm -f $SNAPCRAFT_PRIME/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/{} \;
      rm -fr "$SNAPCRAFT_PRIME/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/dri"
      cd "$SNAPCRAFT_PRIME/usr/share/"
      rm -rf bug drirc.d glvnd libdrm lintian man alsa bash-completion dbus-1 help kconf_update kservices5 libinput locale openal pkgconfig applications doc kf5 kservicetypes5 libthai metainfo perl qlogging-categories5 thumbnailers xml apport config.kcfg doc-base GConf gnupg info knotifications5 kxmlgui5 libwacom themes sounds
      cd $SNAPCRAFT_PRIME/usr/lib/$SNAPCRAFT_ARCH_TRIPLET
      rm -rf libLLVM* libGLX_mesa* libpulse-simple* libjacket* libtheora* libvulkan* libwayland-server* libdconf*
      echo $SNAPCRAFT_PROJECT_VERSION > $SNAPCRAFT_PRIME/VERSION

layout:
  /usr/share/libdrm:  # Needed by mesa-core20 on AMD GPUs
    bind: $SNAP/graphics/libdrm
  /usr/share/drirc.d:  # Used by mesa-core20 for app specific workarounds
    bind: $SNAP/graphics/drirc.d
  /usr/share/fonts:
    bind: $SNAP/usr/share/fonts
  /usr/local/share/fonts:
    bind: $SNAP/usr/share/fonts
  /usr/share/icons:
    bind: $SNAP/usr/share/icons
  /usr/share/sounds:
    bind: $SNAP/usr/share/sounds
  /etc/fonts:
    bind: $SNAP/etc/fonts
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/gtk-3.0:
    bind: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/gtk-3.0
  /usr/share/mime:
    bind: $SNAP/usr/share/mime
  /etc/gtk-3.0:
    bind: $SNAP/etc/gtk-3.0
  /usr/share/alsa:
    bind: $SNAP/usr/share/alsa
  $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libva.so.2:
    bind-file: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libva.so.2.1400.0

architectures:
  - build-on: amd64
  - build-on: arm64

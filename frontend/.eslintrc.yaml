root: true

parser: "@typescript-eslint/parser"

parserOptions:
  tsconfigRootDir: "./frontend"
  project:
    - "tsconfig.json"
  sourceType: module
  extraFileExtensions:
    - .svelte

env:
  browser: true
  es2020: true
  node: true

plugins:
  - "svelte3"
  - "@typescript-eslint"

overrides:
  - files:
    - "*.svelte"
    processor: "svelte3/svelte3"

settings:
  "svelte3/typescript": true

globals:
  JSX: readonly
  NodeJS: readonly

rules:
  # Possible Errors
  for-direction: warn
  getter-return: warn
  no-await-in-loop: warn
  no-compare-neg-zero: warn
  no-cond-assign: warn
  no-console: off
  no-constant-condition: warn
  no-control-regex: off
  no-debugger: off
  no-dupe-args: warn
  no-dupe-else-if: warn
  no-dupe-keys: warn
  no-duplicate-case: warn
  no-empty:
    - warn
    - allowEmptyCatch: true
  no-empty-character-class: warn
  no-ex-assign: off
  no-extra-boolean-cast: warn
  "@typescript-eslint/no-extra-parens": off
  "@typescript-eslint/no-extra-semi": warn
  no-func-assign: warn
  no-import-assign: warn
  no-inner-declarations: warn
  no-invalid-regexp: error
  no-irregular-whitespace: warn
  no-misleading-character-class: warn
  no-obj-calls: error
  no-prototype-builtins: warn
  no-regex-spaces: warn
  no-setter-return: warn
  no-sparse-arrays: warn
  no-template-curly-in-string: off
  no-unexpected-multiline: warn
  no-unreachable: warn
  no-unsafe-finally: warn
  no-unsafe-negation: warn
  # no-useless-backreference: warn
  require-atomic-updates:
    - warn
    - allowProperties: true
  use-isnan: warn
  valid-typeof: warn

  # Best Practices
  accessor-pairs: warn
  array-callback-return: warn
  block-scoped-var: warn
  class-methods-use-this:
    - warn
    - exceptMethods:
      - render
  complexity: off
  consistent-return: off
  curly: off
  default-case: off
  # default-case-last: warn
  "@typescript-eslint/default-param-last": off
  dot-location:
    - warn
    - property
  dot-notation: warn
  eqeqeq: warn
  grouped-accessor-pairs: warn
  guard-for-in: off
  max-classes-per-file: off
  no-alert: off
  no-caller: warn
  no-case-declarations: off
  no-constructor-return: warn
  no-div-regex: off
  no-else-return: warn
  "@typescript-eslint/no-empty-function": off
  no-empty-pattern: warn
  no-eq-null: warn
  no-eval: warn
  no-extend-native: warn
  no-extra-bind: warn
  no-extra-label: warn
  no-fallthrough: warn
  no-floating-decimal: warn
  no-global-assign: warn
  no-implicit-coersion: off
  no-implicit-globals: off
  no-implied-eval: warn
  "@typescript-eslint/no-invalid-this": warn
  no-iterator: warn
  no-labels: off
  no-lone-blocks: off
  no-loop-func: warn
  "@typescript-eslint/no-magic-numbers": off
  no-multi-spaces: warn
  no-multi-str: warn
  no-new: warn
  no-new-func: warn
  no-new-wrappers: warn
  no-octal: off
  no-octal-escape: off
  no-param-reassign: off
  no-proto: warn
  no-redeclare: warn
  no-restricted-properties: off
  no-return-assign: warn
  no-return-await: warn
  no-script-url: warn
  no-self-assign: off
  no-self-compare: warn
  no-sequences: warn
  no-throw-literal: warn
  no-unmodified-loop-condition: off
  "@typescript-eslint/no-unused-expressions": warn
  no-unused-labels: warn
  no-useless-call: warn
  no-useless-catch: warn
  no-useless-concat: warn
  no-useless-escape: warn
  no-useless-return: warn
  no-void: off
  no-warning-comments: off
  no-with: warn
  prefer-named-capture-group: off
  prefer-promise-reject-errors: warn
  prefer-regex-literals: warn
  radix:
    - warn
    - as-needed
  # "@typescript-eslint/require-await": warn
  require-await: warn
  require-unicode-regexp: off
  vars-on-top: off
  wrap-iife:
    - warn
    - inside
  yoda: warn

  # Strict Mode
  strict: warn

  # Variables
  init-declarations: off
  no-delete-var: warn
  no-label-var: warn
  no-restricted-globals: off
  no-shadow:
    - warn
    - allow:
      - err
      - e
  no-shadow-restricted-names: off
  no-undef: error
  no-undef-init: warn
  no-undefined: off
  "@typescript-eslint/no-unused-vars": warn
  "@typescript-eslint/no-use-before-define":
    - warn
    - functions: false

  # Node.js and CommonJS
  callback-return: off
  global-require: off
  handle-callback-err: warn
  no-buffer-constructor: warn
  no-mixed-requires: warn
  no-new-require: warn
  no-path-concat: warn
  no-process-env: off
  no-process-exit: off
  no-restricted-modules: off
  no-sync: off

  # Stylistic Issues
  array-bracket-newline: off
  array-bracket-spacing: warn
  array-element-newline: off
  block-spacing: warn
  "@typescript-eslint/brace-style":
    - warn
    - 1tbs
    - allowSingleLine: true
  camelcase:
    - warn
    - properties: never
  capitalized-comments: off
  comma-dangle:
    - warn
    - arrays: "always-multiline"
      objects: "always-multiline"
      imports: "always-multiline"
      exports: "always-multiline"
      functions: "only-multiline"
  "@typescript-eslint/comma-spacing": warn
  comma-style: warn
  computed-property-spacing: warn
  consistent-this: warn
  eol-last: warn
  "@typescript-eslint/indent":
    - warn
    - tab
  "@typescript-eslint/func-call-spacing": warn
  func-name-matching: off
  func-names: warn
  func-style:
    - warn
    - declaration
  function-paren-newline:
    - warn
    - consistent
  id-blacklist: off
  id-length: off
  id-match: off
  implicit-arrow-linebreak: warn
  indent:
    - warn
    - tab
    - SwitchCase: 1
  jsx-quotes: warn
  key-spacing: warn
  keyword-spacing: warn
  line-comment-position: off
  linebreak-style: warn
  lines-around-comments: off
  lines-between-class-members: warn
  max-depth: off
  max-len: off
  max-lines: off
  max-lines-per-function: off
  max-nested-callbacks: off
  max-params: off
  max-statements: off
  max-statements-per-line: warn
  multiline-comment-style:
    - warn
    - separate-lines
  multiline-ternary: off
  new-cap: warn
  new-parens: warn
  newline-per-chained-call: off
  "@typescript-eslint/no-array-constructor": warn
  no-bitwise: off
  no-continue: off
  no-inline-comments: off
  no-lonely-if: warn
  no-mixed-operators: off
  no-mixed-spaces-and-tabs: warn
  no-multi-assign: off
  no-multiple-empty-lines: warn
  no-negated-condition: warn
  no-nested-ternary: off
  no-new-object: warn
  no-plusplus: off
  no-restricted-syntax: off
  no-tabs: off
  no-ternary: off
  no-trailing-spaces: warn
  no-underscore-dangle: warn
  no-unneeded-ternary: warn
  no-whitespace-before-property: warn
  nonblock-statement-body-position: off
  object-curly-newline:
    - warn
    - consistent: true
  object-curly-spacing:
    - warn
    - always
  object-property-newline:
    - warn
    - allowAllPropertiesOnSameLine: true
  one-var: off
  one-var-declaration-per-line: warn
  operator-assignment: warn
  operator-linebreak: warn
  padded-blocks:
    - warn
    - never
  padding-line-between-statements: off
  prefer-exponentiation-operator: warn
  prefer-object-spread: warn
  quote-props:
    - warn
    - as-needed
  "@typescript-eslint/quotes": warn
  "@typescript-eslint/semi": warn
  semi-spacing: warn
  semi-style: warn
  sort-keys: off
  sort-vars: off
  space-before-blocks: off
  "@typescript-eslint/space-before-function-paren":
    - warn
    - anonymous: never
      named: never
      asyncArrow: always
  space-in-parens: warn
  space-infix-ops: warn
  space-unary-ops: warn
  spaced-comment: warn
  switch-colon-spacing: warn
  template-tag-spacing: warn
  unicode-bom: warn
  wrap-regex: off

  # ECMAScript 6
  arrow-body-style: warn
  arrow-parens: warn
  arrow-spacing: warn
  constructor-super: warn
  generator-star-spacing: warn
  no-class-assign: warn
  no-confusing-arrow: off
  no-const-assign: warn
  "@typescript-eslint/no-dupe-class-members": warn
  no-duplicate-imports: warn
  no-new-symbol: warn
  no-restricted-exports: off
  no-restricted-imports: off
  no-this-before-super: warn
  no-useless-computed-key: warn
  "@typescript-eslint/no-useless-constructor": warn
  no-useless-rename: warn
  no-var: warn
  object-shorthand: warn
  prefer-arrow-callback: warn
  prefer-const:
    - warn
    - ignoreReadBeforeAssign: true
  prefer-destructuring:
    - warn
    - array: false
  prefer-numeric-literals: warn
  prefer-rest-params: warn
  prefer-spread: warn
  prefer-template: warn
  require-yield: warn
  rest-spread-spacing: warn
  sort-imports: off
  symbol-description: warn
  template-curly-spacing: warn
  yield-star-spacing: warn

  # TypeScript
  "@typescript-eslint/adjacent-overload-signatures": warn
  "@typescript-eslint/array-type": warn
  # "@typescript-eslint/await-thenable": warn
  "@typescript-eslint/ban-ts-comment": off
  "@typescript-eslint/ban-types": warn
  "@typescript-eslint/class-literal-property-style": off
  "@typescript-eslint/consistent-type-assertions": warn
  "@typescript-eslint/consistent-type-definitions": warn
  "@typescript-eslint/explicit-function-return-type":
    - warn
    - allowExpressions: true
  "@typescript-eslint/explicit-member-accessibility":
    - warn
    - accessibility: no-public
  "@typescript-eslint/explicit-module-boundary-types": off
  "@typescript-eslint/member-delimiter-style": warn
  "@typescript-eslint/member-ordering": off
  "@typescript-eslint/naming-convention": off
  # "@typescript-eslint/no-base-to-string": warn
  "@typescript-eslint/no-dynamic-delete": warn
  "@typescript-eslint/no-empty-interface": warn
  "@typescript-eslint/no-explicit-any": off
  "@typescript-eslint/no-extra-non-null-assertion": warn
  "@typescript-eslint/no-extraneous-class": warn
  # "@typescript-eslint/no-floating-promises": warn
  "@typescript-eslint/no-for-in-array": warn
  # "@typescript-eslint/no-implied-eval": warn
  "@typescript-eslint/no-inferrable-types": warn
  "@typescript-eslint/no-misused-new": warn
  # "@typescript-eslint/no-misused-promises": warn
  "@typescript-eslint/no-namespace": warn
  "@typescript-eslint/no-non-null-asserted-optional-chain": warn
  "@typescript-eslint/no-non-null-assertion": warn
  "@typescript-eslint/no-parameter-properties": warn
  "@typescript-eslint/no-require-imports": off
  "@typescript-eslint/no-this-alias": warn
  # "@typescript-eslint/no-throw-literal": warn
  "@typescript-eslint/no-type-alias": off
  # "@typescript-eslint/no-unnecessary-boolean-literal-compare": warn
  # "@typescript-eslint/no-unnecessary-condition": warn
  # "@typescript-eslint/no-unnecessary-qualifier": warn
  # "@typescript-eslint/no-unnecessary-type-arguments": warn
  # "@typescript-eslint/no-unnecessary-type-assertion": warn
  "@typescript-eslint/no-unsafe-call": off
  "@typescript-eslint/no-unsafe-member-access": off
  "@typescript-eslint/no-unsafe-return": off
  # "@typescript-eslint/no-unused-vars-experimental": warn
  "@typescript-eslint/no-var-requires": off
  "@typescript-eslint/prefer-as-const": warn
  "@typescript-eslint/prefer-for-of": warn
  "@typescript-eslint/prefer-function-type": warn
  # "@typescript-eslint/prefer-includes": warn
  "@typescript-eslint/prefer-namespace-keyword": warn
  # "@typescript-eslint/prefer-nullish-coalescing": warn
  "@typescript-eslint/prefer-optional-chain": warn
  # "@typescript-eslint/prefer-readonly": warn
  # "@typescript-eslint/prefer-readonly-parameter-types": warn
  # "@typescript-eslint/prefer-regexp-exec": warn
  # "@typescript-eslint/prefer-string-starts-ends-with": warn
  # "@typescript-eslint/promise-function-async": warn
  # "@typescript-eslint/require-array-sort-compare": warn
  # "@typescript-eslint/restrict-plus-operands": warn
  # "@typescript-eslint/restrict-template-expressions": warn
  # "@typescript-eslint/strict-boolean-expressions": warn
  # "@typescript-eslint/switch-exhaustiveness-check": warn
  "@typescript-eslint/triple-slash-reference": warn
  "@typescript-eslint/type-annotation-spacing": warn
  "@typescript-eslint/typedef": off
  "@typescript-eslint/unbound-method": off
  "@typescript-eslint/unified-signatures": off
